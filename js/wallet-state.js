// js/wallet-state.js - –û–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞
class WalletState {
    constructor() {
        this.storageKey = 'cardgift_wallet_state';
        this.checkInterval = null;
    }

    // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞
    save(walletData) {
        const state = {
            address: walletData.address,
            userId: walletData.userId,
            level: walletData.level,
            isActive: walletData.isActive,
            connectedAt: Date.now(),
            lastSeen: Date.now()
        };
        localStorage.setItem(this.storageKey, JSON.stringify(state));
        console.log('üíæ Wallet state saved:', state.userId);
    }

    // –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞
    load() {
        try {
            const saved = localStorage.getItem(this.storageKey);
            if (!saved) return null;
            
            const state = JSON.parse(saved);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ —É—Å—Ç–∞—Ä–µ–ª–æ –ª–∏ (24 —á–∞—Å–∞)
            if (Date.now() - state.lastSeen > 24 * 60 * 60 * 1000) {
                this.clear();
                return null;
            }
            
            console.log('üì± Wallet state loaded:', state.userId);
            return state;
        } catch (error) {
            console.error('‚ùå Error loading wallet state:', error);
            return null;
        }
    }

    // –û–±–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    updateLastSeen() {
        const saved = this.load();
        if (saved) {
            saved.lastSeen = Date.now();
            localStorage.setItem(this.storageKey, JSON.stringify(saved));
        }
    }

    // –û—á–∏—Å—Ç–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    clear() {
        localStorage.removeItem(this.storageKey);
        console.log('üßπ Wallet state cleared');
    }

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    startHeartbeat() {
        this.checkInterval = setInterval(() => {
            this.updateLastSeen();
        }, 30000); // –ö–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    }

    stopHeartbeat() {
        if (this.checkInterval) {
            clearInterval(this.checkInterval);
            this.checkInterval = null;
        }
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
window.walletState = new WalletState();
